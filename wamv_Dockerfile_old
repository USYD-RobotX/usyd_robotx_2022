# Start with default docker image for ROS1 noetic over Ubuntu 20.04 Focal.
FROM osrf/ros:noetic-desktop-full 

SHELL ["/bin/bash", "-c"] # Specify a bash shell for run commands.

# Update Debian package index.
RUN apt-get update

# Install catkin & dependencies:
RUN apt-get install -y \
    python3-catkin-pkg \
    ros-noetic-catkin \
    python3-catkin-tools 


# Add packages to install below (don't forget the backslash).
RUN apt-get install -y \    
    git \
    nano \
    net-tools \
    screenfetch \ 
    tree \
    wget



# Installing the LCM tunnel, keyrick and repo. Commands as gotten from Trello
RUN wget http://www-personal.acfr.usyd.edu.au/lachlan/mirror/acfrmarine-keyring_focal_all.deb \
         http://www-personal.acfr.usyd.edu.au/lachlan/mirror/acfrmarine-repo_focal_all.deb
RUN dpkg -i acfrmarine-*.deb
RUN apt update
RUN apt install bot2-all -y





# Copy pyspy to docker container
COPY pyspy /usr/local/bin/

RUN apt-get install -y python

COPY lcm /usr/lib/python2.7/dist-packages/lcm 




RUN apt-get autoremove -y

WORKDIR /robotxDevEnv
RUN git clone https://github.com/USYD-RobotX/robotx_2022 

### Set up the Heartbeat ROS Node. ###

# Skip all caching for the catkin workstace build (comment to cache).
#ADD "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" skipcache

# Source the ROS distro setup file.
RUN . /opt/ros/noetic/setup.bash

# Create and move to the catkin workspace.
RUN mkdir -p robotx_ws/src
WORKDIR /robotx_ws

# Clone the comms & heartbeat scripts from GitHub.
WORKDIR src
RUN git clone https://github.com/USYD-RobotX/wamv_comms
WORKDIR /robotx_ws

# Initialise & build the catkin workspace.
RUN catkin init
RUN catkin config --extend /opt/ros/noetic
RUN catkin build

RUN . devel/setup.bash

WORKDIR ..

