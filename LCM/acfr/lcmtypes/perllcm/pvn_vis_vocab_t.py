"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class pvn_vis_vocab_t(object):
    __slots__ = ["nvocab", "keylen", "vocab"]

    def __init__(self):
        self.nvocab = 0
        self.keylen = 0
        self.vocab = []

    def encode(self):
        buf = BytesIO()
        buf.write(pvn_vis_vocab_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">ii", self.nvocab, self.keylen))
        for i0 in range(self.nvocab):
            buf.write(struct.pack('>%df' % self.keylen, *self.vocab[i0][:self.keylen]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != pvn_vis_vocab_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return pvn_vis_vocab_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = pvn_vis_vocab_t()
        self.nvocab, self.keylen = struct.unpack(">ii", buf.read(8))
        self.vocab = []
        for i0 in range(self.nvocab):
            self.vocab.append(struct.unpack('>%df' % self.keylen, buf.read(self.keylen * 4)))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if pvn_vis_vocab_t in parents: return 0
        tmphash = (0x22d3c96e0f48b51) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if pvn_vis_vocab_t._packed_fingerprint is None:
            pvn_vis_vocab_t._packed_fingerprint = struct.pack(">Q", pvn_vis_vocab_t._get_hash_recursive([]))
        return pvn_vis_vocab_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

