"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class xbox_command_t(object):
    __slots__ = ["utime", "left_rumble", "right_rumble", "led_code"]

    LED_OFF = 0
    LED_ALL_BLINK = 1
    LED_1_BLINK_ON = 2
    LED_2_BLINK_ON = 3
    LED_3_BLINK_ON = 4
    LED_4_BLINK_ON = 5
    LED_1_ON = 6
    LED_2_ON = 7
    LED_3_ON = 8
    LED_4_ON = 9
    LED_ROTATE = 10
    LED_BLINK = 11
    LED_BLINK_SLOWER = 12
    LED_ROTATE_TWO = 13
    LED_BLINK_ONCE = 15

    def __init__(self):
        self.utime = 0
        self.left_rumble = 0
        self.right_rumble = 0
        self.led_code = 0

    def encode(self):
        buf = BytesIO()
        buf.write(xbox_command_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qiii", self.utime, self.left_rumble, self.right_rumble, self.led_code))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != xbox_command_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return xbox_command_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = xbox_command_t()
        self.utime, self.left_rumble, self.right_rumble, self.led_code = struct.unpack(">qiii", buf.read(20))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if xbox_command_t in parents: return 0
        tmphash = (0xc116709f85eaf88f) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if xbox_command_t._packed_fingerprint is None:
            xbox_command_t._packed_fingerprint = struct.pack(">Q", xbox_command_t._get_hash_recursive([]))
        return xbox_command_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

