"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class est_navigator_index_t(object):
    __slots__ = ["proc_state_len", "u_len", "x", "y", "z", "r", "p", "h", "u", "v", "w", "a", "b", "c", "x_dot", "y_dot", "z_dot", "r_dot", "p_dot", "h_dot"]

    def __init__(self):
        self.proc_state_len = 0
        self.u_len = 0
        self.x = 0
        self.y = 0
        self.z = 0
        self.r = 0
        self.p = 0
        self.h = 0
        self.u = 0
        self.v = 0
        self.w = 0
        self.a = 0
        self.b = 0
        self.c = 0
        self.x_dot = 0
        self.y_dot = 0
        self.z_dot = 0
        self.r_dot = 0
        self.p_dot = 0
        self.h_dot = 0

    def encode(self):
        buf = BytesIO()
        buf.write(est_navigator_index_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">iiiiiiiiiiiiiiiiiiii", self.proc_state_len, self.u_len, self.x, self.y, self.z, self.r, self.p, self.h, self.u, self.v, self.w, self.a, self.b, self.c, self.x_dot, self.y_dot, self.z_dot, self.r_dot, self.p_dot, self.h_dot))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != est_navigator_index_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return est_navigator_index_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = est_navigator_index_t()
        self.proc_state_len, self.u_len, self.x, self.y, self.z, self.r, self.p, self.h, self.u, self.v, self.w, self.a, self.b, self.c, self.x_dot, self.y_dot, self.z_dot, self.r_dot, self.p_dot, self.h_dot = struct.unpack(">iiiiiiiiiiiiiiiiiiii", buf.read(80))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if est_navigator_index_t in parents: return 0
        tmphash = (0x59d898af5747b359) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if est_navigator_index_t._packed_fingerprint is None:
            est_navigator_index_t._packed_fingerprint = struct.pack(">Q", est_navigator_index_t._get_hash_recursive([]))
        return est_navigator_index_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

