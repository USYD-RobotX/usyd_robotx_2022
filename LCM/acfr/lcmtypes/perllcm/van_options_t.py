"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class van_options_t(object):
    __slots__ = ["self", "vis_plot_features", "vis_plot_scene_prior", "vis_plot_put_corr", "vis_plot_search_ellipses", "vis_plot_in_and_out", "vis_plot_inliers", "vis_plot_summary", "vis_plot_relpose", "vis_plot_3pts", "vis_plot_relpose_3pts", "vis_plot_waitkey", "vis_use_saliency", "n_plinks", "manual_corr", "mdist_plink"]

    def __init__(self):
        self.self = False
        self.vis_plot_features = False
        self.vis_plot_scene_prior = False
        self.vis_plot_put_corr = False
        self.vis_plot_search_ellipses = False
        self.vis_plot_in_and_out = False
        self.vis_plot_inliers = False
        self.vis_plot_summary = False
        self.vis_plot_relpose = False
        self.vis_plot_3pts = False
        self.vis_plot_relpose_3pts = False
        self.vis_plot_waitkey = False
        self.vis_use_saliency = False
        self.n_plinks = 0
        self.manual_corr = False
        self.mdist_plink = False

    def encode(self):
        buf = BytesIO()
        buf.write(van_options_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">bbbbbbbbbbbbbibb", self.self, self.vis_plot_features, self.vis_plot_scene_prior, self.vis_plot_put_corr, self.vis_plot_search_ellipses, self.vis_plot_in_and_out, self.vis_plot_inliers, self.vis_plot_summary, self.vis_plot_relpose, self.vis_plot_3pts, self.vis_plot_relpose_3pts, self.vis_plot_waitkey, self.vis_use_saliency, self.n_plinks, self.manual_corr, self.mdist_plink))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != van_options_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return van_options_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = van_options_t()
        self.self = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_features = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_scene_prior = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_put_corr = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_search_ellipses = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_in_and_out = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_inliers = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_summary = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_relpose = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_3pts = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_relpose_3pts = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_plot_waitkey = bool(struct.unpack('b', buf.read(1))[0])
        self.vis_use_saliency = bool(struct.unpack('b', buf.read(1))[0])
        self.n_plinks = struct.unpack(">i", buf.read(4))[0]
        self.manual_corr = bool(struct.unpack('b', buf.read(1))[0])
        self.mdist_plink = bool(struct.unpack('b', buf.read(1))[0])
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if van_options_t in parents: return 0
        tmphash = (0x38c2226de06f4b4) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if van_options_t._packed_fingerprint is None:
            van_options_t._packed_fingerprint = struct.pack(">Q", van_options_t._get_hash_recursive([]))
        return van_options_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

