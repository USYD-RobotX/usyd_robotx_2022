"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class bs_rcm_t(object):
    __slots__ = ["time_received", "time", "compass_number", "heading", "pitch", "roll", "time_measured"]

    def __init__(self):
        self.time_received = 0
        self.time = 0
        self.compass_number = 0
        self.heading = 0.0
        self.pitch = 0.0
        self.roll = 0.0
        self.time_measured = 0

    def encode(self):
        buf = BytesIO()
        buf.write(bs_rcm_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qqidddq", self.time_received, self.time, self.compass_number, self.heading, self.pitch, self.roll, self.time_measured))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != bs_rcm_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return bs_rcm_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = bs_rcm_t()
        self.time_received, self.time, self.compass_number, self.heading, self.pitch, self.roll, self.time_measured = struct.unpack(">qqidddq", buf.read(52))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if bs_rcm_t in parents: return 0
        tmphash = (0x868b0050f05aa4e3) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if bs_rcm_t._packed_fingerprint is None:
            bs_rcm_t._packed_fingerprint = struct.pack(">Q", bs_rcm_t._get_hash_recursive([]))
        return bs_rcm_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

