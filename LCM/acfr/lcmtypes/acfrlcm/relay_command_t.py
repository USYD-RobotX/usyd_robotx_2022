"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class relay_command_t(object):
    __slots__ = ["utime", "relay_number", "relay_request", "relay_off_delay", "io_number", "io_request"]

    def __init__(self):
        self.utime = 0
        self.relay_number = 0
        self.relay_request = False
        self.relay_off_delay = 0
        self.io_number = 0
        self.io_request = False

    def encode(self):
        buf = BytesIO()
        buf.write(relay_command_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qBbiBb", self.utime, self.relay_number, self.relay_request, self.relay_off_delay, self.io_number, self.io_request))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != relay_command_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return relay_command_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = relay_command_t()
        self.utime, self.relay_number = struct.unpack(">qB", buf.read(9))
        self.relay_request = bool(struct.unpack('b', buf.read(1))[0])
        self.relay_off_delay, self.io_number = struct.unpack(">iB", buf.read(5))
        self.io_request = bool(struct.unpack('b', buf.read(1))[0])
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if relay_command_t in parents: return 0
        tmphash = (0xf16fb918c73a2c96) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if relay_command_t._packed_fingerprint is None:
            relay_command_t._packed_fingerprint = struct.pack(">Q", relay_command_t._get_hash_recursive([]))
        return relay_command_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

