"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class waterlinked_beam_t(object):
    __slots__ = ["id", "velocity", "distance", "rssi", "nsd", "beam_valid"]

    def __init__(self):
        self.id = 0
        self.velocity = 0.0
        self.distance = 0.0
        self.rssi = 0.0
        self.nsd = 0.0
        self.beam_valid = False

    def encode(self):
        buf = BytesIO()
        buf.write(waterlinked_beam_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">bddddb", self.id, self.velocity, self.distance, self.rssi, self.nsd, self.beam_valid))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != waterlinked_beam_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return waterlinked_beam_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = waterlinked_beam_t()
        self.id, self.velocity, self.distance, self.rssi, self.nsd = struct.unpack(">bdddd", buf.read(33))
        self.beam_valid = bool(struct.unpack('b', buf.read(1))[0])
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if waterlinked_beam_t in parents: return 0
        tmphash = (0x90f8bceeca31456f) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if waterlinked_beam_t._packed_fingerprint is None:
            waterlinked_beam_t._packed_fingerprint = struct.pack(">Q", waterlinked_beam_t._get_hash_recursive([]))
        return waterlinked_beam_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

