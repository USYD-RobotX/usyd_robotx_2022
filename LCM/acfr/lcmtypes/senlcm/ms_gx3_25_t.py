"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class ms_gx3_25_t(object):
    __slots__ = ["utime", "bitmask", "MagField", "Accel", "AngRate", "Euler", "Temperature", "TimerTicks"]

    INST_MAGFIELD = 1
    INST_ACCEL = 2
    INST_ANGRATE = 4
    EULER = 8
    STAB_MAGFIELD = 16
    STAB_ACCEL = 32
    STAB_ANGRATE = 64
    TEMPERATURE = 128

    def __init__(self):
        self.utime = 0
        self.bitmask = 0
        self.MagField = [ 0.0 for dim0 in range(3) ]
        self.Accel = [ 0.0 for dim0 in range(3) ]
        self.AngRate = [ 0.0 for dim0 in range(3) ]
        self.Euler = [ 0.0 for dim0 in range(3) ]
        self.Temperature = 0.0
        self.TimerTicks = 0

    def encode(self):
        buf = BytesIO()
        buf.write(ms_gx3_25_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qq", self.utime, self.bitmask))
        buf.write(struct.pack('>3d', *self.MagField[:3]))
        buf.write(struct.pack('>3d', *self.Accel[:3]))
        buf.write(struct.pack('>3d', *self.AngRate[:3]))
        buf.write(struct.pack('>3d', *self.Euler[:3]))
        buf.write(struct.pack(">di", self.Temperature, self.TimerTicks))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != ms_gx3_25_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return ms_gx3_25_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = ms_gx3_25_t()
        self.utime, self.bitmask = struct.unpack(">qq", buf.read(16))
        self.MagField = struct.unpack('>3d', buf.read(24))
        self.Accel = struct.unpack('>3d', buf.read(24))
        self.AngRate = struct.unpack('>3d', buf.read(24))
        self.Euler = struct.unpack('>3d', buf.read(24))
        self.Temperature, self.TimerTicks = struct.unpack(">di", buf.read(12))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if ms_gx3_25_t in parents: return 0
        tmphash = (0xbdcf5d2afc537f00) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if ms_gx3_25_t._packed_fingerprint is None:
            ms_gx3_25_t._packed_fingerprint = struct.pack(">Q", ms_gx3_25_t._get_hash_recursive([]))
        return ms_gx3_25_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

