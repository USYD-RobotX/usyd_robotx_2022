"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class posmv_t(object):
    __slots__ = ["utime", "gps_time", "latitude", "longitude", "gnss_quality", "num_sats", "roll", "pitch", "heading", "roll_accuracy", "pitch_accuracy", "heading_accuracy", "imu_status", "latitude_sd", "longitude_sd", "velocity_heading", "velocity"]

    def __init__(self):
        self.utime = 0
        self.gps_time = 0
        self.latitude = 0.0
        self.longitude = 0.0
        self.gnss_quality = 0
        self.num_sats = 0
        self.roll = 0.0
        self.pitch = 0.0
        self.heading = 0.0
        self.roll_accuracy = 0.0
        self.pitch_accuracy = 0.0
        self.heading_accuracy = 0.0
        self.imu_status = 0
        self.latitude_sd = 0.0
        self.longitude_sd = 0.0
        self.velocity_heading = 0.0
        self.velocity = 0.0

    def encode(self):
        buf = BytesIO()
        buf.write(posmv_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qqddbbddddddbdddd", self.utime, self.gps_time, self.latitude, self.longitude, self.gnss_quality, self.num_sats, self.roll, self.pitch, self.heading, self.roll_accuracy, self.pitch_accuracy, self.heading_accuracy, self.imu_status, self.latitude_sd, self.longitude_sd, self.velocity_heading, self.velocity))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != posmv_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return posmv_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = posmv_t()
        self.utime, self.gps_time, self.latitude, self.longitude, self.gnss_quality, self.num_sats, self.roll, self.pitch, self.heading, self.roll_accuracy, self.pitch_accuracy, self.heading_accuracy, self.imu_status, self.latitude_sd, self.longitude_sd, self.velocity_heading, self.velocity = struct.unpack(">qqddbbddddddbdddd", buf.read(115))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if posmv_t in parents: return 0
        tmphash = (0xbef41e211b67cc85) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if posmv_t._packed_fingerprint is None:
            posmv_t._packed_fingerprint = struct.pack(">Q", posmv_t._get_hash_recursive([]))
        return posmv_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

