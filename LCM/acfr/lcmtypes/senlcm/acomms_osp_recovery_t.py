"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

import senlcm.acomms_two_osp_t

class acomms_osp_recovery_t(object):
    __slots__ = ["two_osp_msg", "eta", "Lambda", "org_tol_no", "new_tol_no"]

    def __init__(self):
        self.two_osp_msg = senlcm.acomms_two_osp_t()
        self.eta = [ 0.0 for dim0 in range(4) ]
        self.Lambda = [ 0.0 for dim0 in range(16) ]
        self.org_tol_no = 0
        self.new_tol_no = 0

    def encode(self):
        buf = BytesIO()
        buf.write(acomms_osp_recovery_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        assert self.two_osp_msg._get_packed_fingerprint() == senlcm.acomms_two_osp_t._get_packed_fingerprint()
        self.two_osp_msg._encode_one(buf)
        buf.write(struct.pack('>4d', *self.eta[:4]))
        buf.write(struct.pack('>16d', *self.Lambda[:16]))
        buf.write(struct.pack(">ii", self.org_tol_no, self.new_tol_no))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != acomms_osp_recovery_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return acomms_osp_recovery_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = acomms_osp_recovery_t()
        self.two_osp_msg = senlcm.acomms_two_osp_t._decode_one(buf)
        self.eta = struct.unpack('>4d', buf.read(32))
        self.Lambda = struct.unpack('>16d', buf.read(128))
        self.org_tol_no, self.new_tol_no = struct.unpack(">ii", buf.read(8))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if acomms_osp_recovery_t in parents: return 0
        newparents = parents + [acomms_osp_recovery_t]
        tmphash = (0x8c62cf0a08fc5b06+ senlcm.acomms_two_osp_t._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if acomms_osp_recovery_t._packed_fingerprint is None:
            acomms_osp_recovery_t._packed_fingerprint = struct.pack(">Q", acomms_osp_recovery_t._get_hash_recursive([]))
        return acomms_osp_recovery_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

