"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class evologics_usbl_t(object):
    __slots__ = ["utime", "mtime", "ctime", "remote_id", "x", "y", "z", "e", "n", "u", "r", "p", "h", "prop_time", "rssi", "accuracy", "integrity", "depth"]

    def __init__(self):
        self.utime = 0
        self.mtime = 0
        self.ctime = 0
        self.remote_id = 0
        self.x = 0.0
        self.y = 0.0
        self.z = 0.0
        self.e = 0.0
        self.n = 0.0
        self.u = 0.0
        self.r = 0.0
        self.p = 0.0
        self.h = 0.0
        self.prop_time = 0.0
        self.rssi = 0
        self.accuracy = 0.0
        self.integrity = 0
        self.depth = 0.0

    def encode(self):
        buf = BytesIO()
        buf.write(evologics_usbl_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qqqiddddddddddidid", self.utime, self.mtime, self.ctime, self.remote_id, self.x, self.y, self.z, self.e, self.n, self.u, self.r, self.p, self.h, self.prop_time, self.rssi, self.accuracy, self.integrity, self.depth))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != evologics_usbl_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return evologics_usbl_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = evologics_usbl_t()
        self.utime, self.mtime, self.ctime, self.remote_id, self.x, self.y, self.z, self.e, self.n, self.u, self.r, self.p, self.h, self.prop_time, self.rssi, self.accuracy, self.integrity, self.depth = struct.unpack(">qqqiddddddddddidid", buf.read(132))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if evologics_usbl_t in parents: return 0
        tmphash = (0x23f3b576f5d280d) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if evologics_usbl_t._packed_fingerprint is None:
            evologics_usbl_t._packed_fingerprint = struct.pack(">Q", evologics_usbl_t._get_hash_recursive([]))
        return evologics_usbl_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

