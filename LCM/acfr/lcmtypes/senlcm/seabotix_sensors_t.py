"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class seabotix_sensors_t(object):
    __slots__ = ["utime", "heading", "roll", "pitch", "depth", "turns", "temperature_internal", "temperature_external", "auto_depth", "auto_heading", "PF_faults", "PF_current", "PF_speed", "PF_temperature", "PA_faults", "PA_current", "PA_speed", "PA_temperature", "PV_faults", "PV_current", "PV_speed", "PV_temperature", "SF_faults", "SF_current", "SF_speed", "SF_temperature", "SA_faults", "SA_current", "SA_speed", "SA_temperature", "SV_faults", "SV_current", "SV_speed", "SV_temperature"]

    def __init__(self):
        self.utime = 0
        self.heading = 0.0
        self.roll = 0.0
        self.pitch = 0.0
        self.depth = 0.0
        self.turns = 0.0
        self.temperature_internal = 0.0
        self.temperature_external = 0.0
        self.auto_depth = 0
        self.auto_heading = 0
        self.PF_faults = 0
        self.PF_current = 0.0
        self.PF_speed = 0
        self.PF_temperature = 0
        self.PA_faults = 0
        self.PA_current = 0.0
        self.PA_speed = 0
        self.PA_temperature = 0
        self.PV_faults = 0
        self.PV_current = 0.0
        self.PV_speed = 0
        self.PV_temperature = 0
        self.SF_faults = 0
        self.SF_current = 0.0
        self.SF_speed = 0
        self.SF_temperature = 0
        self.SA_faults = 0
        self.SA_current = 0.0
        self.SA_speed = 0
        self.SA_temperature = 0
        self.SV_faults = 0
        self.SV_current = 0.0
        self.SV_speed = 0
        self.SV_temperature = 0

    def encode(self):
        buf = BytesIO()
        buf.write(seabotix_sensors_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qdddddddbbbfhbbfhbbfhbbfhbbfhbbfhb", self.utime, self.heading, self.roll, self.pitch, self.depth, self.turns, self.temperature_internal, self.temperature_external, self.auto_depth, self.auto_heading, self.PF_faults, self.PF_current, self.PF_speed, self.PF_temperature, self.PA_faults, self.PA_current, self.PA_speed, self.PA_temperature, self.PV_faults, self.PV_current, self.PV_speed, self.PV_temperature, self.SF_faults, self.SF_current, self.SF_speed, self.SF_temperature, self.SA_faults, self.SA_current, self.SA_speed, self.SA_temperature, self.SV_faults, self.SV_current, self.SV_speed, self.SV_temperature))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != seabotix_sensors_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return seabotix_sensors_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = seabotix_sensors_t()
        self.utime, self.heading, self.roll, self.pitch, self.depth, self.turns, self.temperature_internal, self.temperature_external, self.auto_depth, self.auto_heading, self.PF_faults, self.PF_current, self.PF_speed, self.PF_temperature, self.PA_faults, self.PA_current, self.PA_speed, self.PA_temperature, self.PV_faults, self.PV_current, self.PV_speed, self.PV_temperature, self.SF_faults, self.SF_current, self.SF_speed, self.SF_temperature, self.SA_faults, self.SA_current, self.SA_speed, self.SA_temperature, self.SV_faults, self.SV_current, self.SV_speed, self.SV_temperature = struct.unpack(">qdddddddbbbfhbbfhbbfhbbfhbbfhbbfhb", buf.read(114))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if seabotix_sensors_t in parents: return 0
        tmphash = (0xea72feb97d025798) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if seabotix_sensors_t._packed_fingerprint is None:
            seabotix_sensors_t._packed_fingerprint = struct.pack(">Q", seabotix_sensors_t._get_hash_recursive([]))
        return seabotix_sensors_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

